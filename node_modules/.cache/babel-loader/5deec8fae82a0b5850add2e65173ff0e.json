{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, createReducer } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 10,\n  price: '$100',\n  showCounter: true\n};\ncreateSlice({\n  name: 'counterSlice',\n  initialState: initialState,\n  reducers: {\n    increment: state => {\n      return state.counter++;\n    },\n\n    decrement(state) {\n      return state.counter--;\n    },\n\n    increase(state, action) {\n      return state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter() {\n      return !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INC':\n//             return {counter: state.counter + 1 , showCounter: state.showCounter}\n//             break;\n//         case 'DEC':\n//             return {counter: state.counter - 1 , showCounter: state.showCounter }\n//             break;\n//         case 'increase': \n//             return {counter: state.counter + action.payload , showCounter: state.showCounter}\n//         case 'show_counter':\n//             return {showCounter: !state.showCounter,\n//             counter: state.counter}\n//         default:\n//             console.log('back to the state');\n//             return state;\n//     }\n// }\n\nconst store = createStore(counterReducer);\nexport default store; // CLASS BASED REDUX\n// const initalState = {\n//     counter: 10\n// }\n// const counterReducer = ( state = initalState, action ) => {\n//     switch (action.type) {\n//         case 'INC':\n//             return {counter: state.counter + 1}\n//             break;\n//         case 'DEC': \n//             return {counter: state.counter - 1}\n//         default:\n//             return state\n//             break;\n//     }\n// }\n// const store = redux.createStore(counterReducer)\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'DEC'})","map":{"version":3,"sources":["C:/Users/Administrator/OneDrive/Desktop/ACADEME/redux/src/store/index.js"],"names":["createStore","createSlice","createReducer","initialState","counter","price","showCounter","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","counterReducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,kBAAzC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,KAAK,EAAE,MAFU;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;AAMAL,WAAW,CAAC;AACRM,EAAAA,IAAI,EAAE,cADE;AAERJ,EAAAA,YAAY,EAAEA,YAFN;AAGRK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AAClB,aAAOA,KAAK,CAACN,OAAN,EAAP;AACH,KAHK;;AAINO,IAAAA,SAAS,CAAED,KAAF,EAAS;AACd,aAAOA,KAAK,CAACN,OAAN,EAAP;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAAEF,KAAF,EAASG,MAAT,EAAiB;AACrB,aAAOH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAA9C;AACH,KATK;;AAUNC,IAAAA,aAAa,GAAI;AACb,aAAO,CAACL,KAAK,CAACJ,WAAd;AACH;;AAZK;AAHF,CAAD,CAAX,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMU,KAAK,GAAGhB,WAAW,CAACiB,cAAD,CAAzB;AAEA,eAAeD,KAAf,C,CAEC;AACD;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA","sourcesContent":["import {createStore} from 'redux'\r\nimport {createSlice, createReducer} from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    counter: 10,\r\n    price: '$100',\r\n    showCounter: true\r\n}\r\n\r\ncreateSlice({\r\n    name: 'counterSlice',\r\n    initialState: initialState,\r\n    reducers: {\r\n        increment: (state) => {\r\n            return state.counter++\r\n        },\r\n        decrement (state) {\r\n            return state.counter--\r\n        },\r\n        increase (state, action) {\r\n            return state.counter = state.counter + action.payload\r\n        },\r\n        toggleCounter () {\r\n            return !state.showCounter\r\n        }\r\n    }\r\n})\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case 'INC':\r\n//             return {counter: state.counter + 1 , showCounter: state.showCounter}\r\n//             break;\r\n//         case 'DEC':\r\n//             return {counter: state.counter - 1 , showCounter: state.showCounter }\r\n//             break;\r\n//         case 'increase': \r\n//             return {counter: state.counter + action.payload , showCounter: state.showCounter}\r\n//         case 'show_counter':\r\n//             return {showCounter: !state.showCounter,\r\n//             counter: state.counter}\r\n//         default:\r\n//             console.log('back to the state');\r\n//             return state;\r\n//     }\r\n// }\r\nconst store = createStore(counterReducer)\r\n\r\nexport default store;\r\n\r\n // CLASS BASED REDUX\r\n// const initalState = {\r\n//     counter: 10\r\n// }\r\n\r\n// const counterReducer = ( state = initalState, action ) => {\r\n\r\n//     switch (action.type) {\r\n//         case 'INC':\r\n//             return {counter: state.counter + 1}\r\n//             break;\r\n//         case 'DEC': \r\n//             return {counter: state.counter - 1}\r\n//         default:\r\n//             return state\r\n//             break;\r\n//     }\r\n   \r\n// }\r\n\r\n// const store = redux.createStore(counterReducer)\r\n\r\n// store.dispatch({type: 'INC'})\r\n// store.dispatch({type: 'DEC'})"]},"metadata":{},"sourceType":"module"}