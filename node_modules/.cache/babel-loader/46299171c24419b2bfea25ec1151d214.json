{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INC':\n//             return {counter: state.counter + 1 , showCounter: state.showCounter}\n//             break;\n//         case 'DEC':\n//             return {counter: state.counter - 1 , showCounter: state.showCounter }\n//             break;\n//         case 'increase':\n//             return {counter: state.counter + action.payload , showCounter: state.showCounter}\n//         case 'show_counter':\n//             return {showCounter: !state.showCounter,\n//             counter: state.counter}\n//         default:\n//             console.log('back to the state');\n//             return state;\n//     }\n// }\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActionCreators = counterSlice.actions;\nexport const authActionCreators = authSlice.actions;\nexport default store; // Redux Bare Minimum\n// const initalState = {\n//     counter: 10\n// }\n// const counterReducer = ( state = initalState, action ) => {\n//     switch (action.type) {\n//         case 'INC':\n//             return {counter: state.counter + 1}\n//             break;\n//         case 'DEC':\n//             return {counter: state.counter - 1}\n//         default:\n//             return state\n//             break;\n//     }\n// }\n// const store = redux.createStore(counterReducer)\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'DEC'})","map":{"version":3,"sources":["C:/Users/Administrator/OneDrive/Desktop/ACADEME/redux/src/store/index.js"],"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActionCreators","actions","authActionCreators"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,eAAe,EAAE;AADI,CAAzB;AAGA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAEJ,gBAFY;AAG1BK,EAAAA,QAAQ,EAAG;AACPC,IAAAA,KAAK,CAAEC,KAAF,EAAS;AACVA,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACH,KAHM;;AAIPO,IAAAA,MAAM,CAAED,KAAF,EAAS;AACXA,MAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACH;;AANM;AAHe,CAAD,CAA7B,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;AACzBW,EAAAA,OAAO,EAAG;AACNC,IAAAA,OAAO,EAAGC,YAAY,CAACF,OADjB;AAENG,IAAAA,IAAI,EAAEX,SAAS,CAACQ;AAFV;AADe,CAAD,CAA5B;AAQA,OAAO,MAAMI,qBAAqB,GAAGF,YAAY,CAACG,OAA3C;AACP,OAAO,MAAMC,kBAAkB,GAAGd,SAAS,CAACa,OAArC;AACP,eAAeN,KAAf,C,CAgBC;AACD;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false\r\n}\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: initialAuthState,\r\n    reducers : {\r\n        login (state) {\r\n            state.isAuthenticated = true\r\n        },\r\n        logout (state) {\r\n            state.isAuthenticated = false\r\n        }\r\n    }\r\n})\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case 'INC':\r\n//             return {counter: state.counter + 1 , showCounter: state.showCounter}\r\n//             break;\r\n//         case 'DEC':\r\n//             return {counter: state.counter - 1 , showCounter: state.showCounter }\r\n//             break;\r\n//         case 'increase':\r\n//             return {counter: state.counter + action.payload , showCounter: state.showCounter}\r\n//         case 'show_counter':\r\n//             return {showCounter: !state.showCounter,\r\n//             counter: state.counter}\r\n//         default:\r\n//             console.log('back to the state');\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nconst store = configureStore({\r\n    reducer : {\r\n        counter : counterSlice.reducer,\r\n        auth: authSlice.reducer\r\n    }\r\n\r\n});\r\n\r\nexport const counterActionCreators = counterSlice.actions;\r\nexport const authActionCreators = authSlice.actions;\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n // Redux Bare Minimum\r\n// const initalState = {\r\n//     counter: 10\r\n// }\r\n\r\n// const counterReducer = ( state = initalState, action ) => {\r\n\r\n//     switch (action.type) {\r\n//         case 'INC':\r\n//             return {counter: state.counter + 1}\r\n//             break;\r\n//         case 'DEC':\r\n//             return {counter: state.counter - 1}\r\n//         default:\r\n//             return state\r\n//             break;\r\n//     }\r\n// }\r\n\r\n// const store = redux.createStore(counterReducer)\r\n\r\n// store.dispatch({type: 'INC'})\r\n// store.dispatch({type: 'DEC'})\r\n"]},"metadata":{},"sourceType":"module"}