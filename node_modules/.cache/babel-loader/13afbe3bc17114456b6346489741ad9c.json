{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 10,\n  price: '$100',\n  showCounter: true\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INC':\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      };\n      break;\n\n    case 'DEC':\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n      break;\n\n    case 'increase':\n      return {\n        counter: state.counter + action.payload,\n        showCounter: state.showCounter\n      };\n\n    case 'show_counter':\n      return {\n        showCounter: !state.showCounter,\n        counter: state.counter\n      };\n\n    default:\n      console.log('back to the state');\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store; // CLASS BASED REDUX\n// const initalState = {\n//     counter: 10\n// }\n// const counterReducer = ( state = initalState, action ) => {\n//     switch (action.type) {\n//         case 'INC':\n//             return {counter: state.counter + 1}\n//             break;\n//         case 'DEC': \n//             return {counter: state.counter - 1}\n//         default:\n//             return state\n//             break;\n//     }\n// }\n// const store = redux.createStore(counterReducer)\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'DEC'})","map":{"version":3,"sources":["C:/Users/Administrator/OneDrive/Desktop/ACADEME/redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","price","showCounter","counterReducer","state","action","type","payload","console","log","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,KAAK,EAAE,MAFU;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;;AAMA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO;AAACN,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CAA1B;AAA8BE,QAAAA,WAAW,EAAEE,KAAK,CAACF;AAAjD,OAAP;AACA;;AACJ,SAAK,KAAL;AACI,aAAO;AAACF,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CAA1B;AAA8BE,QAAAA,WAAW,EAAEE,KAAK,CAACF;AAAjD,OAAP;AACA;;AACJ,SAAK,UAAL;AACI,aAAO;AAACF,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACE,OAAjC;AAA2CL,QAAAA,WAAW,EAAEE,KAAK,CAACF;AAA9D,OAAP;;AACJ,SAAK,cAAL;AACI,aAAO;AAACA,QAAAA,WAAW,EAAE,CAACE,KAAK,CAACF,WAArB;AACPF,QAAAA,OAAO,EAAEI,KAAK,CAACJ;AADR,OAAP;;AAEJ;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,aAAOL,KAAP;AAdR;AAgBH,CAjBD;;AAkBA,MAAMM,KAAK,GAAGb,WAAW,CAACM,cAAD,CAAzB;AAEA,eAAeO,KAAf,C,CAEC;AACD;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA","sourcesContent":["import {createStore} from 'redux'\r\nimport {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    counter: 10,\r\n    price: '$100',\r\n    showCounter: true\r\n}\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'INC':\r\n            return {counter: state.counter + 1 , showCounter: state.showCounter}\r\n            break;\r\n        case 'DEC':\r\n            return {counter: state.counter - 1 , showCounter: state.showCounter }\r\n            break;\r\n        case 'increase': \r\n            return {counter: state.counter + action.payload , showCounter: state.showCounter}\r\n        case 'show_counter':\r\n            return {showCounter: !state.showCounter,\r\n            counter: state.counter}\r\n        default:\r\n            console.log('back to the state');\r\n            return state;\r\n    }\r\n}\r\nconst store = createStore(counterReducer)\r\n\r\nexport default store;\r\n\r\n // CLASS BASED REDUX\r\n// const initalState = {\r\n//     counter: 10\r\n// }\r\n\r\n// const counterReducer = ( state = initalState, action ) => {\r\n\r\n//     switch (action.type) {\r\n//         case 'INC':\r\n//             return {counter: state.counter + 1}\r\n//             break;\r\n//         case 'DEC': \r\n//             return {counter: state.counter - 1}\r\n//         default:\r\n//             return state\r\n//             break;\r\n//     }\r\n   \r\n// }\r\n\r\n// const store = redux.createStore(counterReducer)\r\n\r\n// store.dispatch({type: 'INC'})\r\n// store.dispatch({type: 'DEC'})"]},"metadata":{},"sourceType":"module"}