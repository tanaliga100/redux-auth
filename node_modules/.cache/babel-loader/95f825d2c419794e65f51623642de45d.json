{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 10,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counterSlice\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport const counterActionCreators = counterSlice.actions;\nexport default counterSlice;","map":{"version":3,"sources":["C:/Users/Administrator/OneDrive/Desktop/ACADEME/redux/src/store/counter-slice.js"],"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActionCreators","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,OAAO,EAAE,EADe;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAA5B;AAKE,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,cADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAAEC,KAAF,EAAS;AACdA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACP,OAAN;AACF,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACrBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACF,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBF,OAAO,MAAMY,qBAAqB,GAAGX,YAAY,CAACY,OAA3C;AAGL,eAAeZ,YAAf","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialCounterState = {\r\n    counter: 10,\r\n    showCounter: true,\r\n  };\r\n  \r\n  const counterSlice = createSlice({\r\n    name: \"counterSlice\",\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n      increment (state) {\r\n          state.counter++;\r\n      },\r\n      decrement(state) {\r\n         state.counter--;\r\n      },\r\n      increase(state, action) {\r\n         state.counter = state.counter + action.payload;\r\n      },\r\n      toggleCounter(state) {\r\n        state.showCounter = !state.showCounter;\r\n      },\r\n    },\r\n  });\r\n\r\nexport const counterActionCreators = counterSlice.actions;\r\n\r\n  \r\n  export default counterSlice;"]},"metadata":{},"sourceType":"module"}