{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 10,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counterSlice\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\ncreateSlice({\n  name: 'auth'\n}); // const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INC':\n//             return {counter: state.counter + 1 , showCounter: state.showCounter}\n//             break;\n//         case 'DEC':\n//             return {counter: state.counter - 1 , showCounter: state.showCounter }\n//             break;\n//         case 'increase':\n//             return {counter: state.counter + action.payload , showCounter: state.showCounter}\n//         case 'show_counter':\n//             return {showCounter: !state.showCounter,\n//             counter: state.counter}\n//         default:\n//             console.log('back to the state');\n//             return state;\n//     }\n// }\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActionCreators = counterSlice.actions;\nexport default store; // Redux Bare Minimum\n// const initalState = {\n//     counter: 10\n// }\n// const counterReducer = ( state = initalState, action ) => {\n//     switch (action.type) {\n//         case 'INC':\n//             return {counter: state.counter + 1}\n//             break;\n//         case 'DEC':\n//             return {counter: state.counter - 1}\n//         default:\n//             return state\n//             break;\n//     }\n// }\n// const store = redux.createStore(counterReducer)\n// store.dispatch({type: 'INC'})\n// store.dispatch({type: 'DEC'})","map":{"version":3,"sources":["C:/Users/Administrator/OneDrive/Desktop/ACADEME/redux/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","store","reducer","counterActionCreators","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,EADiB;AAE1BC,EAAAA,WAAW,EAAE;AAFa,CAA5B;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,cADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAAEC,KAAF,EAAS;AACdA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACP,OAAN;AACF,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACrBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACF,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAqBA,MAAMY,gBAAgB,GAAG;AACrBC,EAAAA,eAAe,EAAE;AADI,CAAzB;AAGAjB,WAAW,CAAC;AACRM,EAAAA,IAAI,EAAE;AADE,CAAD,CAAX,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMY,KAAK,GAAGjB,cAAc,CAAC;AACzBkB,EAAAA,OAAO,EAAGd,YAAY,CAACc;AADE,CAAD,CAA5B;AAKA,OAAO,MAAMC,qBAAqB,GAAGf,YAAY,CAACgB,OAA3C;AACP,eAAeH,KAAf,C,CAgBC;AACD;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = {\r\n  counter: 10,\r\n  showCounter: true,\r\n};\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counterSlice\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment (state) {\r\n        state.counter++;\r\n    },\r\n    decrement(state) {\r\n       state.counter--;\r\n    },\r\n    increase(state, action) {\r\n       state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false\r\n}\r\ncreateSlice({\r\n    name: 'auth'\r\n})\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case 'INC':\r\n//             return {counter: state.counter + 1 , showCounter: state.showCounter}\r\n//             break;\r\n//         case 'DEC':\r\n//             return {counter: state.counter - 1 , showCounter: state.showCounter }\r\n//             break;\r\n//         case 'increase':\r\n//             return {counter: state.counter + action.payload , showCounter: state.showCounter}\r\n//         case 'show_counter':\r\n//             return {showCounter: !state.showCounter,\r\n//             counter: state.counter}\r\n//         default:\r\n//             console.log('back to the state');\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nconst store = configureStore({\r\n    reducer : counterSlice.reducer\r\n\r\n});\r\n\r\nexport const counterActionCreators = counterSlice.actions;\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n // Redux Bare Minimum\r\n// const initalState = {\r\n//     counter: 10\r\n// }\r\n\r\n// const counterReducer = ( state = initalState, action ) => {\r\n\r\n//     switch (action.type) {\r\n//         case 'INC':\r\n//             return {counter: state.counter + 1}\r\n//             break;\r\n//         case 'DEC':\r\n//             return {counter: state.counter - 1}\r\n//         default:\r\n//             return state\r\n//             break;\r\n//     }\r\n// }\r\n\r\n// const store = redux.createStore(counterReducer)\r\n\r\n// store.dispatch({type: 'INC'})\r\n// store.dispatch({type: 'DEC'})\r\n"]},"metadata":{},"sourceType":"module"}